{"version":3,"sources":["InvoiceList.js","InvoiceHeader.js","InvoiceSeller.js","InvoiceBuyer.js","InvoicePosition.js","Invoice.js","App.js","serviceWorker.js","index.js"],"names":["invoicesElement","InvoiceHeader","props","console","log","value","_props$value","invoiceNumber","issueDate","place","sellDate","react_default","a","createElement","Fragment","className","htmlFor","id","type","name","onChange","readOnly","InvoiceSeller","sellerName","sellerTaxNo","sellerStreet","postcode","sellerCity","style","fontWeight","fontSize","onBlur","nameMessage","document","querySelector","length","innerHTML","getElementById","taxNoMessage","replace","controlSum","parseInt","charAt","row","streetMessage","marginRight","postcodeMessage","match","marginLeft","cityMessage","InvoiceBuyer","buyerName","buyerTaxNo","buyerStreet","buyerPostcode","buyerCity","InvoicePosition","list","totalTax","totalNet","totalGross","handlePosition","positionMessage","forEach","e","positionAttributes","handleQuantity","quantityMessage","positionQuantity","handleUnit","unitMessage","positionUnit","handlePriceNet","priceNetMessage","positionPriceNet","handleTax","taxMessage","deletePosition","form","position","removeChild","onSubmit","preventDefault","map","val","idx","positionAttrId","concat","positionQuantId","positionUnitId","positionPriceNetId","positionTaxId","positionTotalNetId","positionTotalGrossId","key","min","positionTax","positionTotalNet","positionTotalGross","onClick","addPosition","InvoiceSaveBtn","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","saveInvoice","react_router_dom","to","React","Component","Invoice","minDate","Date","toISOString","slice","setInvoiceNumber","counter","lsInvoices","localStorage","getItem","JSON","parse","split","Number","toLocaleDateString","state","_this","handleInvoiceData","event","_event$target","target","setState","defineProperty","handleInvoicePosition","includes","toConsumableArray","toFixed","i","handleAddInvoicePosition","prevState","handleSaveInvoice","_this$state","splice","saveToLocalStorage","alert","newInvoice","invoices","push","setItem","stringify","width","margin","src_InvoiceHeader","src_InvoiceSeller","src_InvoiceBuyer","src_InvoicePosition","Invoice_InvoiceSaveBtn","invoicesData","InvoiceList","handleGetInvoices","deleteInvoice","bind","assertThisInitialized","index","findIndex","class","Main","App","basename","process","react_router","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kLAKIA,+FCoCWC,EAvCO,SAACC,GACnBC,QAAQC,IAAIF,EAAMG,OADW,IAAAC,EAEqBJ,EAAMG,MAAnDE,EAFwBD,EAExBC,cAAeC,EAFSF,EAETE,UAAWC,EAFFH,EAEEG,MAAOC,EAFTJ,EAESI,SAEtC,OAAOC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,kBAAf,iBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,iBACHC,KAAK,OACLC,KAAK,gBACLd,MAAOE,EACPa,SAAUlB,EAAMkB,SAChBC,UAAQ,IAEfV,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,sBAAf,oBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,qBACHC,KAAK,OAAOC,KAAK,YACjBd,MAAOG,EACPY,SAAUlB,EAAMkB,WACvBT,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,iBAAf,uBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,gBACHC,KAAK,OACLC,KAAK,QACLd,MAAOI,EACPW,SAAUlB,EAAMkB,WACvBT,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,qBAAf,uBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,oBACHC,KAAK,OACLC,KAAK,WACLd,MAAOK,EACPU,SAAUlB,EAAMkB,cCoFpBE,EAtHO,SAACpB,GAAU,IAAAI,EAEyCJ,EAAMG,MAArEkB,EAFsBjB,EAEtBiB,WAAYC,EAFUlB,EAEVkB,YAAaC,EAFHnB,EAEGmB,aAAcC,EAFjBpB,EAEiBoB,SAAUC,EAF3BrB,EAE2BqB,WAgEpD,OAAOhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,sBAAsBY,MAAO,CAACC,WAAY,OAAQC,SAAU,SAA3E,cACAnB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,sBACHC,KAAK,OACLC,KAAK,aACLd,MAAOkB,EACPH,SAAUlB,EAAMkB,SAChBW,OAvEM,WACrB,IAAIC,EAAcC,SAASC,cAAc,sBACrCX,EAAWY,OAAS,EACpBH,EAAYI,UAAY,GAExBJ,EAAYI,UAAY,kDAmEpBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,sBAChBJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,yBAAf,OACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,wBACHC,KAAK,OACLC,KAAK,cACLd,MAAOmB,EACPJ,SAAUlB,EAAMkB,SAChBW,OAxEC,WAEhB,IAAIP,EAAcS,SAASI,eAAe,yBAAyBhC,MAC/DiC,EAAeL,SAASC,cAAc,uBAI1C,IADAV,GADAA,GAAc,IACYe,QAAQ,WAAW,KAC9BJ,OAAS,GAAI,OAAQG,EAAaF,UAAY,+CAC7D,GAAGZ,EAAYW,OAAS,GAAI,OAAQG,EAAaF,UAAY,+CAC7D,IAAII,EAAW,EAWf,OAVAA,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,IACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,KACxCF,GAA4C,EAAhCC,SAASjB,EAAYkB,OAAO,KAEzB,KAAQD,SAASjB,EAAYkB,OAAO,IACxCJ,EAAaF,UAAY,GAEzBE,EAAaF,UAAY,+BAkD5BzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,uBAChBJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,yBAAf,cACAL,EAAAC,EAAAC,cAAA,YAAUE,UAAU,SACVE,GAAG,wBACH0B,IAAI,IAAIxB,KAAK,eACbd,MAAOoB,EACPL,SAAUlB,EAAMkB,SAChBW,OArDK,WACvB,IAAIa,EAAgBX,SAASC,cAAc,wBACxCT,EAAaU,OAAS,EACrBS,EAAcR,UAAY,GAE1BQ,EAAcR,UAAY,kDAiDtBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,wBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,SAAOe,MAAO,CAACiB,YAAa,QAAS7B,QAAQ,2BAA7C,gBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qBACVE,GAAG,0BACHC,KAAK,OACLC,KAAK,WACLd,MAAOqB,EACPN,SAAUlB,EAAMkB,SAChBW,OAtDM,WAEzB,IAAIe,EAAkBb,SAASC,cAAc,0BACxCR,EAASqB,MAAM,iBAGhBD,EAAgBV,UAAY,GAF5BU,EAAgBV,UAAY,4BAmDpBzB,EAAAC,EAAAC,cAAA,SAAOe,MAAO,CAACiB,YAAa,OAAQG,WAAY,QAAShC,QAAQ,uBAAjE,yBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qBACVE,GAAG,sBACHC,KAAK,OACLC,KAAK,aACLd,MAAOsB,EACPP,SAAUlB,EAAMkB,SAChBW,OApDE,WACrB,IAAIkB,EAAchB,SAASC,cAAc,sBACtCP,EAAWQ,OAAS,EACnBc,EAAYb,UAAY,GAExBa,EAAYb,UAAY,8DAiDpBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,0BAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,yBCSjBmC,EAzHM,SAAChD,GAAU,IAAAI,EAE4CJ,EAAMG,MAAtE8C,EAFoB7C,EAEpB6C,UAAWC,EAFS9C,EAET8C,WAAYC,EAFH/C,EAEG+C,YAAaC,EAFhBhD,EAEgBgD,cAAeC,EAF/BjD,EAE+BiD,UAiEvD,OAAO5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,qBAAqBY,MAAO,CAACC,WAAY,OAAQC,SAAU,SAA1E,WACAnB,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,qBACHC,KAAK,OACLC,KAAK,YACLd,MAAO8C,EACP/B,SAAUlB,EAAMkB,SAChBW,OAxEK,WACpB,IAAIC,EAAcC,SAASC,cAAc,qBACrCiB,EAAUhB,OAAS,EACnBH,EAAYI,UAAY,GAExBJ,EAAYI,UAAY,gDAoEpBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,qBAChBJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,wBAAf,OACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACVE,GAAG,uBACHC,KAAK,OACLC,KAAK,aACLd,MAAO+C,EACPhC,SAAUlB,EAAMkB,SAChBW,OAxEC,WAEhB,IAAIqB,EAAanB,SAASI,eAAe,wBAAwBhC,MAC7DiC,EAAeL,SAASC,cAAc,sBAIlC,IADAkB,GADAA,GAAa,IACWb,QAAQ,WAAW,KAC7BJ,OAAS,GAAI,OAAQG,EAAaF,UAAY,+CAC5D,GAAGgB,EAAWjB,OAAS,GAAI,OAAQG,EAAaF,UAAY,+CAC5D,IAAII,EAAW,EAWf,OAVAA,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,IACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,KACvCF,GAA2C,EAA/BC,SAASW,EAAWV,OAAO,KAExB,KAAQD,SAASW,EAAWV,OAAO,IACvCJ,EAAaF,UAAY,GAEzBE,EAAaF,UAAY,+BAkDpCzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,sBAChBJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,wBAAf,cACAL,EAAAC,EAAAC,cAAA,YAAUE,UAAU,SACVE,GAAG,uBACH0B,IAAI,IACJxB,KAAK,cACLd,MAAOgD,EACPjC,SAAUlB,EAAMkB,SAChBW,OAtDI,WACtB,IAAIa,EAAgBX,SAASC,cAAc,uBACxCmB,EAAYlB,OAAS,EACpBS,EAAcR,UAAY,GAE1BQ,EAAcR,UAAY,kDAkDtBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,uBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,SAAOe,MAAO,CAACiB,YAAa,QAAS7B,QAAQ,0BAA7C,gBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qBACVE,GAAG,yBACHC,KAAK,OACLC,KAAK,gBACLd,MAAOiD,EACPlC,SAAUlB,EAAMkB,SAChBW,OAvDK,WAExB,IAAIe,EAAkBb,SAASC,cAAc,yBACxCoB,EAAcP,MAAM,iBAGrBD,EAAgBV,UAAY,GAF5BU,EAAgBV,UAAY,4BAoDpBzB,EAAAC,EAAAC,cAAA,SAAOe,MAAO,CAACiB,YAAa,OAAQG,WAAY,QAAShC,QAAQ,sBAAjE,yBACAL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,qBACVE,GAAG,qBACHC,KAAK,OACLC,KAAK,YACLd,MAAOkD,EACPnC,SAAUlB,EAAMkB,SAChBW,OArDC,WACpB,IAAIkB,EAAchB,SAASC,cAAc,qBACtCqB,EAAUpB,OAAS,EAClBc,EAAYb,UAAY,GAExBa,EAAYb,UAAY,8DAkDpBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAW,yBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,wBCkDjByC,EArKS,SAACtD,GAAU,IAAAI,EAEgBJ,EAAMG,MAA9CoD,EAFwBnD,EAExBmD,KAAMC,EAFkBpD,EAElBoD,SAAUC,EAFQrD,EAERqD,SAAUC,EAFFtD,EAEEsD,WAI3BC,EAAiB,WACnB,IAAIC,EAAkB7B,SAASC,cAAc,oBAC7CuB,EAAKM,QAAQ,SAAAC,GACLA,EAAEC,mBAAmB9B,OAAS,EAC9B2B,EAAgB1B,UAAY,GAE5B0B,EAAgB1B,UAAY,8BAKlC8B,EAAiB,WACnB,IAAIC,EAAkBlC,SAASC,cAAc,oBAC7CuB,EAAKM,QAAQ,SAAAC,GACLA,EAAEI,iBAAiBjC,OAAS,EAC5BgC,EAAgB/B,UAAY,GAE5B+B,EAAgB/B,UAAY,mCAKlCiC,EAAa,WACf,IAAIC,EAAcrC,SAASC,cAAc,gBACzCuB,EAAKM,QAAQ,SAAAC,GACLA,EAAEO,aAAapC,OAAS,EACxBmC,EAAYlC,UAAY,GAExBkC,EAAYlC,UAAY,kCAK9BoC,EAAiB,WACnB,IAAIC,EAAkBxC,SAASC,cAAc,oBAC7CuB,EAAKM,QAAQ,SAAAC,GACLA,EAAEU,iBAAiBvC,OAAS,EAC5BsC,EAAgBrC,UAAY,GAE5BqC,EAAgBrC,UAAY,6BAKlCuC,EAAY,WACd,IAAIC,EAAa3C,SAASC,cAAc,eACxCuB,EAAKM,QAAQ,SAAAC,GACLA,EAAEO,aAAapC,OAAS,EACxByC,EAAWxC,UAAY,GAEvBwC,EAAWxC,UAAY,yBAK7ByC,EAAiB,SAACb,GACpB,IAAIc,EAAO7C,SAASC,cAAc,oBAC9B6C,EAAW9C,SAASC,cAAc,gBAClC6C,EAASd,qBAAuBD,EAAEC,oBAClCa,EAAKE,YAAYD,IAIzB,OACIpE,EAAAC,EAAAC,cAAA,QAAME,UAAU,kBAAkBkE,SAlEjB,SAACjB,GAAOA,EAAEkB,mBAmErBzB,EAAK0B,IAAI,SAACC,EAAKC,GACb,IAAIC,EAAc,sBAAAC,OAAyBF,GACvCG,EAAe,oBAAAD,OAAuBF,GACtCI,EAAc,gBAAAF,OAAoBF,GAClCK,EAAkB,oBAAAH,OAAwBF,GAC1CM,EAAa,eAAAJ,OAAmBF,GAChCO,EAAkB,oBAAAL,OAAwBF,GAC1CQ,EAAoB,sBAAAN,OAA0BF,GAElD,OACI1E,EAAAC,EAAAC,cAAA,OAAKiF,IAAKT,EAAKtE,UAAW,eACtBJ,EAAAC,EAAAC,cAAA,SAAOG,QAASsE,GAAhB,GAAAC,OAAoCF,EAAM,EAA1C,YACA1E,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OACLC,KAAMmE,EACNrE,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKpB,mBACjBlD,UAAU,qBACVK,SAAUlB,EAAMkB,SACfW,OAAQ8B,IAChBlD,EAAAC,EAAAC,cAAA,SAAOG,QAASwE,GAAhB,mBACA7E,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SACL6E,IAAK,EACL5E,KAAMqE,EACNvE,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKjB,iBACjBrD,UAAU,mBACVK,SAAUlB,EAAMkB,SACfW,OAAQmC,IAChBvD,EAAAC,EAAAC,cAAA,SAAOG,QAASyE,GAAhB,aACA9E,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OACLC,KAAMsE,EACNxE,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKd,aACjBxD,UAAU,eACVK,SAAUlB,EAAMkB,SAChBW,OAAQsC,IACf1D,EAAAC,EAAAC,cAAA,SAAOG,QAAS0E,GAAhB,cACA/E,EAAAC,EAAAC,cAAA,SAAOK,KAAK,SACL6E,IAAK,EACL5E,KAAMuE,EACNzE,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKX,iBACjB3D,UAAU,mBACVK,SAAUlB,EAAMkB,SACfW,OAAQyC,IAChB7D,EAAAC,EAAAC,cAAA,SAAOG,QAAS2E,GAAhB,SACAhF,EAAAC,EAAAC,cAAA,UAAQM,KAAMwE,EACN1E,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKW,YACjBjF,UAAU,cACVK,SAAUlB,EAAMkB,SAChBW,OAAQ4C,GACZhE,EAAAC,EAAAC,cAAA,UAAQR,MAAM,KAAd,MACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,QAAd,MACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,QAAd,KACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,QAAd,KACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,QAAd,KACAM,EAAAC,EAAAC,cAAA,UAAQR,MAAM,KAAd,MAEJM,EAAAC,EAAAC,cAAA,SAAOG,QAAS4E,GAAhB,2BACAjF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OACLC,KAAMyE,EACN3E,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKY,iBACjBlF,UAAU,mBACVK,SAAUlB,EAAMkB,WACvBT,EAAAC,EAAAC,cAAA,SAAOG,QAAS6E,GAAhB,4BACAlF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OACLC,KAAM0E,EACN5E,GAAIoE,EACJhF,MAAOoD,EAAK4B,GAAKa,mBACjBnF,UAAU,qBACVK,SAAUlB,EAAMkB,WACvBT,EAAAC,EAAAC,cAAA,UAAQE,UAAW,iBAAkBoF,QAAStB,EAAgB3D,KAAK,UAAnE,QAKZP,EAAAC,EAAAC,cAAA,OAAKE,UAAW,oBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,oBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,oBAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,eAChBJ,EAAAC,EAAAC,cAAA,UAAQsF,QAASjG,EAAMkG,YAAarF,UAAU,kBAA9C,sBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,yBAAiB6C,EAAjB,KACA/C,EAAAC,EAAAC,cAAA,2BAAmB8C,EAAnB,KACAhD,EAAAC,EAAAC,cAAA,4BAAoB+C,EAApB,eCzJHyC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAP,IAAA,SAAAzF,MAAA,WAEQ,OAAOM,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,UAAQsF,QAASM,KAAKvG,MAAM8G,YAAajG,UAAU,aAAnD,UACAJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAaJ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMlG,UAAU,OAAOmG,GAAG,SAA1B,sBAJ3Cb,EAAA,CAAoCc,IAAMC,WASpCC,6MAEFC,SAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,MAC5CC,iBAAmB,WACf,IACIC,EADAC,EAAaC,aAAaC,QAAQ,YAQlC,OADAH,EAFOI,KAAKC,MAAMJ,GAAYG,KAAKC,MAAMJ,GAAYzF,OAAQ,GAAG5B,cACjD0H,MAAM,KACH,GACVC,OAAOP,GAAW,EAAK,KAAO,IAAIJ,MAAOY,qBAAqBV,MAAM,EAAG,IAAIlF,QAAQ,IAAK,QAOxG6F,MAAQ,CACA7H,cAAe8H,EAAKX,mBACpBlH,UAAW6H,EAAKf,QAChB7G,MAAO,WACPC,SAAU2H,EAAKf,QACf/F,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZwB,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,UAAW,GACXE,KAAM,CAAC,CACHQ,mBAAoB,GACpBG,iBAAkB,GAClBG,aAAc,GACdG,iBAAkB,GAClBsB,YAAa,GACbC,iBAAkB,GAClBC,mBAAoB,KAExBxC,SAAU,EACVC,SAAU,EACVC,WAAY,KAIpB0E,kBAAoB,SAACC,GAAU,IAAAC,EACHD,EAAME,OAAtBtH,EADmBqH,EACnBrH,KAAMd,EADamI,EACbnI,MACVgI,EAAKK,SAALnC,OAAAoC,EAAA,EAAApC,CAAA,GACKpF,EAAOd,OAIpBuI,sBAAwB,SAAAL,GACpB,GAAI,CAAC,qBACD,mBACA,eACA,mBACA,cACA,mBACA,sBAAsBM,SAASN,EAAME,OAAO1H,WAAY,CACxD,IAAI0C,EAAI8C,OAAAuC,EAAA,EAAAvC,CAAO8B,EAAKD,MAAM3E,MAC1BA,EAAK8E,EAAME,OAAOxH,IAAIsH,EAAME,OAAO1H,WAAawH,EAAME,OAAOpI,MAE7DoD,EAAK8E,EAAME,OAAOxH,IAAIgF,iBAAmBxC,EAAK8E,EAAME,OAAOxH,IAAImD,iBAAmBX,EAAK8E,EAAME,OAAOxH,IAAIyD,iBACxGjB,EAAK8E,EAAME,OAAOxH,IAAIgF,iBAAiB8C,QAAQ,GAC/CtF,EAAK8E,EAAME,OAAOxH,IAAIiF,mBAAqBzC,EAAK8E,EAAME,OAAOxH,IAAIgF,iBAAoBxC,EAAK8E,EAAME,OAAOxH,IAAIgF,iBAAmBxC,EAAK8E,EAAME,OAAOxH,IAAI+E,YACpJvC,EAAK8E,EAAME,OAAOxH,IAAIiF,mBAAmB6C,QAAQ,GAGjD,IAAIrF,EAAW,EACXC,EAAW,EACXC,EAAa,EAEjBH,EAAKM,QAAQ,SAACC,EAAGgF,GACTtF,GAAawE,OAAOlE,EAAEgC,aAAekC,OAAOlE,EAAEU,kBAC9Cf,GAAYuE,OAAOlE,EAAEiC,kBACrBrC,GAAcsE,OAAOlE,EAAEkC,sBAG/BmC,EAAKK,SAAS,CACVjF,KAAMA,EACNC,SAAUwE,OAAOxE,EAASqF,QAAQ,IAClCpF,SAAUuE,OAAOvE,EAASoF,QAAQ,IAClCnF,WAAYsE,OAAOtE,EAAWmF,QAAQ,UAKlDE,yBAA2B,SAACV,GACxBA,EAAMrD,iBACNmD,EAAKK,SAAS,SAACQ,GAAD,MAAgB,CAC1BzF,KAAI,GAAA8B,OAAAgB,OAAAuC,EAAA,EAAAvC,CAAM2C,EAAUzF,MAAhB,CAAsB,CACtBQ,mBAAoB,GACpBG,iBAAkB,GAClBG,aAAc,GACdG,iBAAkB,GAClBsB,YAAa,GACbC,iBAAkB,GAClBC,mBAAoB,YAKhCiD,kBAAoB,SAACZ,GACjBA,EAAMrD,iBADqB,IAAAkE,EAE2Kf,EAAKD,MAApM7H,EAFoB6I,EAEpB7I,cAAeC,EAFK4I,EAEL5I,UAAWC,EAFN2I,EAEM3I,MAAMC,EAFZ0I,EAEY1I,SAASa,EAFrB6H,EAEqB7H,WAAWC,EAFhC4H,EAEgC5H,YAAYC,EAF5C2H,EAE4C3H,aAAaC,EAFzD0H,EAEyD1H,SAASC,EAFlEyH,EAEkEzH,WAAWwB,EAF7EiG,EAE6EjG,UAAUC,EAFvFgG,EAEuFhG,WAAWC,EAFlG+F,EAEkG/F,YAAYC,EAF9G8F,EAE8G9F,cAAcC,EAF5H6F,EAE4H7F,UAAUG,EAFtI0F,EAEsI1F,SAASC,EAF/IyF,EAE+IzF,SAASC,EAFxJwF,EAEwJxF,WAAWH,EAFnK2F,EAEmK3F,KACzLlD,GAAiBC,GAAaC,GAASC,GAAYa,GAAcC,GAAeC,GAAgBC,GAAYC,GAAcwB,GAAaC,GAAcC,GAAeC,GAAiBC,GAAaG,GAAYC,GAAYC,GAC1NH,EAAKM,QAAQ,SAACC,EAAEgF,GAEiB,KAAzBhF,EAAEC,oBACqB,KAAvBD,EAAEI,kBACiB,KAAnBJ,EAAEO,cACqB,KAAvBP,EAAEU,kBACgB,KAAlBV,EAAEgC,aACqB,KAAvBhC,EAAEiC,kBACuB,KAAzBjC,EAAEkC,oBAEFzC,EAAK4F,OAAOL,EAAE,KAGtBX,EAAKiB,sBAELC,MAAM,mDAIfD,mBAAqB,SAACtF,GAClB,IAAIwF,EACJA,EAAanB,EAAKD,MAElB,IAAIqB,EAAW5B,aAAaC,QAAQ,YAEjC2B,IACCA,EAAW1B,KAAKC,MAAMyB,IAEbC,KAAKF,GACd3B,aAAa8B,QAAQ,WAAY5B,KAAK6B,UAAUH,KAIhD5B,aAAa8B,QAAQ,WAAY5B,KAAK6B,UAAU,CAACJ,KAErDrJ,QAAQC,IAAIoJ,GACZD,MAAM,8BAENlB,EAAKK,SAAS,CACVnI,cAAe8H,EAAKX,mBACpBlH,UAAW6H,EAAKf,QAChB7G,MAAO,GACPC,SAAU2H,EAAKf,QACf/F,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,WAAY,GACZwB,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,cAAe,GACfC,UAAW,GACXE,KAAM,CAAC,CACHQ,mBAAoB,GACpBG,iBAAkB,GAClBG,aAAc,GACdG,iBAAkB,GAClBsB,YAAa,GACbC,iBAAkB,GAClBC,mBAAoB,KAExBxC,SAAU,EACVC,SAAU,EACVC,WAAY,6EAKhB,OAAOjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,OAAKe,MAAO,CAACiI,MAAO,SAAUC,OAAQ,SAClCnJ,EAAAC,EAAAC,cAACkJ,EAAD,CAAe1J,MAAOoG,KAAK2B,MAAOhH,SAAUqF,KAAK6B,oBACjD3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAACmJ,EAAD,CAAe3J,MAAOoG,KAAK2B,MAAOhH,SAAUqF,KAAK6B,oBACjD3H,EAAAC,EAAAC,cAACoJ,EAAD,CAAc5J,MAAOoG,KAAK2B,MAAOhH,SAAUqF,KAAK6B,qBAEpD3H,EAAAC,EAAAC,cAACqJ,EAAD,CAAiB7J,MAAOoG,KAAK2B,MAAOhH,SAAUqF,KAAKmC,sBAAuBxC,YAAaK,KAAKwC,2BAC5FtI,EAAAC,EAAAC,cAACsJ,EAAD,CAAgBnD,YAAaP,KAAK0C,6BA5L5BhC,IAAMC,mBLbxBgD,SAAe,IAGbC,6MAEFjC,MAAQ,CACJpI,gBAAiB,MAGrBsK,kBAAoB,WAEZzC,aAAaC,QAAQ,cACrB9H,EAAkB+H,KAAKC,MAAMH,aAAaC,QAAQ,aAAa3C,IAAI,SAACnB,EAAGgF,GAEnE,OADAoB,EAAaV,KAAK1F,GACVrD,EAAAC,EAAAC,cAAA,SAAOiF,IAAKkD,EAAGjI,UAAU,cAC7BJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKmD,EAAEzD,eACPI,EAAAC,EAAAC,cAAA,UAAKmD,EAAExD,WACPG,EAAAC,EAAAC,cAAA,UAAKmD,EAAEb,WACPxC,EAAAC,EAAAC,cAAA,UAAKmD,EAAEZ,YACPzC,EAAAC,EAAAC,cAAA,UAAKmD,EAAEN,UACP/C,EAAAC,EAAAC,cAAA,UAAKmD,EAAEJ,YACPjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBAAgBoF,QAASkC,EAAKkC,cAAcC,KAAnBjE,OAAAkE,EAAA,EAAAlE,CAAA8B,GAA8BrE,IAAzE,WAKhBqE,EAAKK,SAAS,CACV1I,gBAAiBA,EACjBoK,aAAcA,mFAKZpG,GAEV,IAAI0G,EAAQN,EAAaO,UAAU,SAAA3B,GAAC,OAAIA,EAAEzI,gBAAkByD,EAAEzD,gBAE9DP,EAAgBqJ,OAAOqB,EAAO,GAC9BN,EAAaf,OAAOqB,EAAO,GAE3BjE,KAAKiC,SAAS,CACV1I,gBAAiBA,EACjBoK,aAAcA,GACf,WACCjK,QAAQC,IAAI,kDACZyH,aAAa8B,QAAQ,WAAY5B,KAAK6B,UAAUQ,uCAMpD,OAAOzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACHH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAEXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,eAKZF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgB0F,KAAK2B,MAAMpI,iBAC1CW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,sBAAsBoF,QAASM,KAAK6D,mBAAtD,wBACA3J,EAAAC,EAAAC,cAAA,UAAQE,UAAW,kBAAkBJ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAM2D,MAAO,OAAQ1D,GAAG,cAAxB,wBACrCvG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBJ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMlG,UAAU,OAAOmG,GAAG,QAA1B,2BAzE9BC,IAAMC,mBMCxByD,mLAIF,OAAOlK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACpBJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAASJ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMlG,UAAU,OAAOmG,GAAG,QAA1B,iBAC3BvG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAASJ,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMlG,UAAU,OAAOmG,GAAG,SAA1B,yBANdC,IAAMC,WAwBZ0D,mLAVT,OAAOnK,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAQ8D,SAAUC,gBACvBrK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,UAAWP,IACnClK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOC,KAAM,OAAQE,UAAW/D,IAChC1G,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAOC,KAAM,QAASE,UAAWf,aAPvBlD,IAAMC,WCPNiE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzI,MACvB,2DCZN0I,IAASC,OAAO/K,EAAAC,EAAAC,cAAC8K,EAAD,MAAS1J,SAASI,eAAe,SD2H3C,kBAAmBuJ,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dbb1545d.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './css/main.scss';\n\nlet invoicesData = [],\n    invoicesElement;\n\nclass InvoiceList extends React.Component {\n\n    state = {\n        invoicesElement: ''\n    };\n\n    handleGetInvoices = () => {\n\n        if (localStorage.getItem('invoices')) {\n            invoicesElement = JSON.parse(localStorage.getItem('invoices')).map((e, i) => {\n                invoicesData.push(e);\n                return (<table key={i} className='newInvoice'>\n                    <tbody>\n                    <tr>\n                        <td>{e.invoiceNumber}</td>\n                        <td>{e.issueDate}</td>\n                        <td>{e.buyerName}</td>\n                        <td>{e.buyerTaxNo}</td>\n                        <td>{e.totalTax}</td>\n                        <td>{e.totalGross}</td>\n                        <td><button className='deleteInvoice' onClick={this.deleteInvoice.bind(this, e)}>X</button></td>\n                    </tr>\n                    </tbody>\n                </table>)\n            });\n            this.setState({\n                invoicesElement: invoicesElement,\n                invoicesData: invoicesData\n            })\n        }\n    };\n\n    deleteInvoice(e) {\n\n        let index = invoicesData.findIndex(i => i.invoiceNumber === e.invoiceNumber);\n        // remove from state\n        invoicesElement.splice(index, 1);\n        invoicesData.splice(index, 1);\n\n        this.setState({\n            invoicesElement: invoicesElement,\n            invoicesData: invoicesData\n        }, () => {\n            console.log('-- save to localStorage after deleteInvoice --');\n            localStorage.setItem('invoices', JSON.stringify(invoicesData));\n        });\n    }\n\n    render(){\n\n        return <>\n            <div className='listOfInvoices'>\n\n                <div className='headerDiv'>\n                    <h1>Lista faktur</h1>\n                    <table className='headerTable'>\n                        <tbody>\n                        <tr>\n                            <td>Numer</td>\n                            <td>Data wystawienia</td>\n                            <td>Klient</td>\n                            <td>NIP</td>\n                            <td>Wartość netto</td>\n                            <td>Wartość brutto</td>\n                            <td></td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div className='listInvoices'>{this.state.invoicesElement}</div>\n                <div>\n                    <button className='getListOfInvoiceBtn' onClick={this.handleGetInvoices}>Pobierz liste faktur</button>\n                    <button className={'invoiceListBtn'}><Link class={'link'} to=\"/list/edit\">Edytuj fakturę</Link></button>\n                    <button className='invoiceListBtn' ><Link className='link' to=\"/new\">Nowa faktura</Link></button>\n                </div>\n            </div>\n        </>\n    }\n}\nexport {InvoiceList};\n\n","import React from 'react';\n\nconst InvoiceHeader = (props) => {\n    console.log(props.value);\n    let {invoiceNumber, issueDate, place, sellDate} = props.value;\n\n    return <>\n        <div className='containerInvoice'>\n            <label htmlFor=\"invoice_number\">Numer faktury</label>\n            <input className='inputs'\n                   id='invoice_number'\n                   type=\"text\"\n                   name='invoiceNumber'\n                   value={invoiceNumber}\n                   onChange={props.onChange}\n                   readOnly\n                   />\n            <label htmlFor=\"invoice_issue_date\">Data wystawienia</label>\n            <input className='inputs'\n                   id=\"invoice_issue_date\"\n                   type=\"date\" name='issueDate'\n                   value={issueDate}\n                   onChange={props.onChange}/>\n            <label htmlFor=\"invoice_place\">Miejsce wystawienia</label>\n            <input className='inputs'\n                   id=\"invoice_place\"\n                   type=\"text\"\n                   name='place'\n                   value={place}\n                   onChange={props.onChange}/>\n            <label htmlFor=\"invoice_sell_date\">Data sprzedaży</label>\n            <input className='inputs'\n                   id=\"invoice_sell_date\"\n                   type=\"date\"\n                   name='sellDate'\n                   value={sellDate}\n                   onChange={props.onChange}/>\n        </div>\n    </>\n};\n\nexport default InvoiceHeader;","import React from 'react';\n\nconst InvoiceSeller = (props) => {\n\n    const {sellerName, sellerTaxNo, sellerStreet, postcode, sellerCity} = props.value;\n\n    const handleSellerName = () => {\n        let nameMessage = document.querySelector(\".sellerNameMessage\");\n        if (sellerName.length > 0 ) {\n            nameMessage.innerHTML = '';\n        }else {\n            nameMessage.innerHTML = 'pole sprzedawcy nie może być puste';\n        }\n    };\n    const handleTaxNo = () => {\n\n        let sellerTaxNo = document.getElementById(\"invoice_seller_tax_no\").value;\n        let taxNoMessage = document.querySelector(\".sellerTaxNoMessage\");\n\n        sellerTaxNo +='';\n        sellerTaxNo = sellerTaxNo.replace(/[^0-9]+/g,'');\n        if(sellerTaxNo.length < 10) return  taxNoMessage.innerHTML = 'nieprawidłowa ilość znaków';\n        if(sellerTaxNo.length > 10) return  taxNoMessage.innerHTML = 'nieprawidłowa ilość znaków';\n        let controlSum=0;\n        controlSum+=parseInt(sellerTaxNo.charAt(0))*6;\n        controlSum+=parseInt(sellerTaxNo.charAt(1))*5;\n        controlSum+=parseInt(sellerTaxNo.charAt(2))*7;\n        controlSum+=parseInt(sellerTaxNo.charAt(3))*2;\n        controlSum+=parseInt(sellerTaxNo.charAt(4))*3;\n        controlSum+=parseInt(sellerTaxNo.charAt(5))*4;\n        controlSum+=parseInt(sellerTaxNo.charAt(6))*5;\n        controlSum+=parseInt(sellerTaxNo.charAt(7))*6;\n        controlSum+=parseInt(sellerTaxNo.charAt(8))*7;\n\n        if((controlSum%11) === parseInt(sellerTaxNo.charAt(9))) {\n            return taxNoMessage.innerHTML = '';\n        } else {\n            return taxNoMessage.innerHTML = 'wpisz prawidłowy nip';\n        }\n    };\n\n    const handleSellerStreet = () => {\n        let streetMessage = document.querySelector('.sellerStreetMessage');\n        if(sellerStreet.length > 0) {\n            streetMessage.innerHTML = '';\n        } else {\n            streetMessage.innerHTML = 'pole ulica i nr nie może być puste';\n        }\n    };\n\n    const handleSellerPostcode = () => {\n\n        let postcodeMessage = document.querySelector('.sellerPostcodeMessage');\n        if (!postcode.match(/^\\d\\d-\\d\\d\\d$/)) {\n            postcodeMessage.innerHTML = 'nieprawidłowy kod';\n        } else {\n            postcodeMessage.innerHTML = '';\n        }\n    };\n\n    const handleSellerCity = () => {\n        let cityMessage = document.querySelector('.sellerCityMessage');\n        if(sellerCity.length > 0) {\n            cityMessage.innerHTML = '';\n        } else {\n            cityMessage.innerHTML = 'pole miejscowość nie może być puste';\n        }\n    };\n        return <>\n            <div className='dataDivs'>\n                <label htmlFor=\"invoice_seller_name\" style={{fontWeight: 'bold', fontSize: '20px'}}>Sprzedawca</label>\n                <input className='inputs'\n                       id='invoice_seller_name'\n                       type=\"text\"\n                       name='sellerName'\n                       value={sellerName}\n                       onChange={props.onChange}\n                       onBlur={handleSellerName}/>\n                <div className={'sellerNameMessage'}>{}</div>\n                <label htmlFor=\"invoice_seller_tax_no\">NIP</label>\n                <input className='inputs'\n                       id='invoice_seller_tax_no'\n                       type=\"text\"\n                       name='sellerTaxNo'\n                       value={sellerTaxNo}\n                       onChange={props.onChange}\n                       onBlur={handleTaxNo}/>\n                <div className={'sellerTaxNoMessage'}>{}</div>\n                <label htmlFor=\"invoice_seller_street\">Ulica i nr</label>\n                <textarea className='inputs'\n                          id='invoice_seller_street'\n                          row=\"1\" name='sellerStreet'\n                          value={sellerStreet}\n                          onChange={props.onChange}\n                          onBlur={handleSellerStreet}/>\n                <div className={'sellerStreetMessage'}>{}</div>\n                <div className='divPostcodeCity'>\n                    <label style={{marginRight: '15px'}} htmlFor=\"invoice_seller_postcode\">Kod pocztowy</label>\n                    <input className='inputsPostcodeCity'\n                           id='invoice_seller_postcode'\n                           type=\"text\"\n                           name='postcode'\n                           value={postcode}\n                           onChange={props.onChange}\n                           onBlur={handleSellerPostcode}/>\n                    <label style={{marginRight: '15px', marginLeft: '15px'}} htmlFor=\"invoice_seller_city\">Miejscowość</label>\n                    <input className='inputsPostcodeCity'\n                           id='invoice_seller_city'\n                           type=\"text\"\n                           name='sellerCity'\n                           value={sellerCity}\n                           onChange={props.onChange}\n                           onBlur={handleSellerCity}/>\n                </div>\n                <div className={'sellerPostcodeMessage'}>{}</div>\n                <div className={'sellerCityMessage'}>{}</div>\n            </div>\n        </>\n};\n\nexport default InvoiceSeller;","import React from 'react';\n\n\nconst InvoiceBuyer = (props) => {\n\n    const { buyerName, buyerTaxNo, buyerStreet, buyerPostcode, buyerCity} = props.value;\n\n    const handleBuyerName = () => {\n        let nameMessage = document.querySelector(\".buyerNameMessage\");\n        if (buyerName.length > 0 ) {\n            nameMessage.innerHTML = '';\n        }else {\n            nameMessage.innerHTML = 'pole odbiorcy nie może być puste';\n        }\n    };\n\n    const handleTaxNo = () => {\n\n        let buyerTaxNo = document.getElementById(\"invoice_buyer_tax_no\").value;\n        let taxNoMessage = document.querySelector(\".buyerTaxNoMessage\");\n\n                buyerTaxNo +='';\n                buyerTaxNo = buyerTaxNo.replace(/[^0-9]+/g,'');\n                if(buyerTaxNo.length < 10) return  taxNoMessage.innerHTML = 'nieprawidłowa ilość znaków';\n                if(buyerTaxNo.length > 10) return  taxNoMessage.innerHTML = 'nieprawidłowa ilość znaków';\n                let controlSum=0;\n                controlSum+=parseInt(buyerTaxNo.charAt(0))*6;\n                controlSum+=parseInt(buyerTaxNo.charAt(1))*5;\n                controlSum+=parseInt(buyerTaxNo.charAt(2))*7;\n                controlSum+=parseInt(buyerTaxNo.charAt(3))*2;\n                controlSum+=parseInt(buyerTaxNo.charAt(4))*3;\n                controlSum+=parseInt(buyerTaxNo.charAt(5))*4;\n                controlSum+=parseInt(buyerTaxNo.charAt(6))*5;\n                controlSum+=parseInt(buyerTaxNo.charAt(7))*6;\n                controlSum+=parseInt(buyerTaxNo.charAt(8))*7;\n\n                if((controlSum%11) === parseInt(buyerTaxNo.charAt(9))) {\n                    return taxNoMessage.innerHTML = '';\n                } else {\n                    return taxNoMessage.innerHTML = 'wpisz prawidłowy nip';\n                }\n    };\n\n    const handleBuyerStreet = () => {\n        let streetMessage = document.querySelector('.buyerStreetMessage');\n        if(buyerStreet.length > 0) {\n            streetMessage.innerHTML = '';\n        } else {\n            streetMessage.innerHTML = 'pole ulica i nr nie może być puste';\n        }\n    };\n\n    const handleBuyerPostcode = () => {\n\n        let postcodeMessage = document.querySelector('.buyerPostcodeMessage');\n        if (!buyerPostcode.match(/^\\d\\d-\\d\\d\\d$/)) {\n            postcodeMessage.innerHTML = 'nieprawidłowy kod';\n        } else {\n            postcodeMessage.innerHTML = '';\n        }\n    };\n\n    const handleBuyerCity = () => {\n        let cityMessage = document.querySelector('.buyerCityMessage');\n        if(buyerCity.length > 0) {\n            cityMessage.innerHTML = '';\n        } else {\n            cityMessage.innerHTML = 'pole miejscowość nie może być puste';\n        }\n    };\n        return <>\n            <div className='dataDivs'>\n                <label htmlFor=\"invoice_buyer_name\" style={{fontWeight: 'bold', fontSize: '20px'}}>Nabywca</label>\n                <input className='inputs'\n                       id='invoice_buyer_name'\n                       type=\"text\"\n                       name='buyerName'\n                       value={buyerName}\n                       onChange={props.onChange}\n                       onBlur={handleBuyerName}/>\n                <div className={'buyerNameMessage'}>{}</div>\n                <label htmlFor=\"invoice_buyer_tax_no\">NIP</label>\n                <input className='inputs'\n                       id='invoice_buyer_tax_no'\n                       type=\"text\"\n                       name='buyerTaxNo'\n                       value={buyerTaxNo}\n                       onChange={props.onChange}\n                       onBlur={handleTaxNo}/>\n                <div className={'buyerTaxNoMessage'}>{}</div>\n                <label htmlFor=\"invoice_buyer_street\">Ulica i nr</label>\n                <textarea className='inputs'\n                          id='invoice_buyer_street'\n                          row=\"1\"\n                          name='buyerStreet'\n                          value={buyerStreet}\n                          onChange={props.onChange}\n                          onBlur={handleBuyerStreet}/>\n                <div className={'buyerStreetMessage'}>{}</div>\n                <div className='divPostcodeCity'>\n                    <label style={{marginRight: '15px'}} htmlFor=\"invoice_buyer_postcode\">Kod pocztowy</label>\n                    <input className='inputsPostcodeCity'\n                           id='invoice_buyer_postcode'\n                           type=\"text\"\n                           name='buyerPostcode'\n                           value={buyerPostcode}\n                           onChange={props.onChange}\n                           onBlur={handleBuyerPostcode}/>\n                    <label style={{marginRight: '15px', marginLeft: '15px'}} htmlFor=\"invoice_buyer_city\">Miejscowość</label>\n                    <input className='inputsPostcodeCity'\n                           id='invoice_buyer_city'\n                           type=\"text\"\n                           name='buyerCity'\n                           value={buyerCity}\n                           onChange={props.onChange}\n                           onBlur={handleBuyerCity}/>\n                </div>\n                <div className={'buyerPostcodeMessage'}>{}</div>\n                <div className={'buyerCityMessage'}>{}</div>\n            </div>\n        </>\n\n};\n\nexport default InvoiceBuyer;","import React from \"react\";\n\n\nconst InvoicePosition = (props) => {\n\n    const {list, totalTax, totalNet, totalGross} = props.value;\n\n    const handleSubmit = (e) => {e.preventDefault()};\n\n    const handlePosition = () => {\n        let positionMessage = document.querySelector(\".positionMessage\");\n        list.forEach(e => {\n            if (e.positionAttributes.length > 0) {\n                positionMessage.innerHTML = '';\n            }else {\n                positionMessage.innerHTML = 'wprowadź nazwę';\n            }\n        })\n    };\n\n    const handleQuantity = () => {\n        let quantityMessage = document.querySelector(\".quantityMessage\");\n        list.forEach(e => {\n            if (e.positionQuantity.length > 0) {\n                quantityMessage.innerHTML = '';\n            }else {\n                quantityMessage.innerHTML = 'wprowadź ilość';\n            }\n        })\n    };\n\n    const handleUnit = () => {\n        let unitMessage = document.querySelector(\".unitMessage\");\n        list.forEach(e => {\n            if (e.positionUnit.length > 0) {\n                unitMessage.innerHTML = '';\n            }else {\n                unitMessage.innerHTML = 'wprowadź jednostkę';\n            }\n        })\n    };\n\n    const handlePriceNet = () => {\n        let priceNetMessage = document.querySelector(\".priceNetMessage\");\n        list.forEach(e => {\n            if (e.positionPriceNet.length > 0) {\n                priceNetMessage.innerHTML = '';\n            }else {\n                priceNetMessage.innerHTML = 'wprowadź cenę';\n            }\n        })\n    };\n\n    const handleTax = () => {\n        let taxMessage = document.querySelector(\".taxMessage\");\n        list.forEach(e => {\n            if (e.positionUnit.length > 0) {\n                taxMessage.innerHTML = '';\n            }else {\n                taxMessage.innerHTML = 'wybierz stawkę';\n            }\n        })\n    };\n\n    const deletePosition = (e) => {\n        let form = document.querySelector('.invoicePosition');\n        let position = document.querySelector('.positionDiv');\n        if (position.positionAttributes === e.positionAttributes ) {\n            form.removeChild(position);\n        }\n    };\n\n    return (\n        <form className='invoicePosition' onSubmit={handleSubmit}>\n            { list.map((val, idx) => {\n                let positionAttrId = `positionAttributes-${idx}`;\n                let positionQuantId = `positionQuantity-${idx}`;\n                let positionUnitId =  `positionUnit-${idx}`;\n                let positionPriceNetId =  `positionPriceNet-${idx}`;\n                let positionTaxId =  `positionTax-${idx}`;\n                let positionTotalNetId =  `positionTotalNet-${idx}`;\n                let positionTotalGrossId =  `positionTotalGross-${idx}`;\n\n                return (\n                    <div key={idx} className={'positionDiv'}>\n                        <label htmlFor={positionAttrId}>{`${idx + 1}) Nazwa`}</label>\n                        <input type=\"text\"\n                               name={positionAttrId}\n                               id={idx}\n                               value={list[idx].positionAttributes}\n                               className='positionAttributes'\n                               onChange={props.onChange}\n                                onBlur={handlePosition}/>\n                        <label htmlFor={positionQuantId}>Ilość</label>\n                        <input type=\"number\"\n                               min={0}\n                               name={positionQuantId}\n                               id={idx}\n                               value={list[idx].positionQuantity}\n                               className='positionQuantity'\n                               onChange={props.onChange}\n                                onBlur={handleQuantity}/>\n                        <label htmlFor={positionUnitId}>Jednostka</label>\n                        <input type=\"text\"\n                               name={positionUnitId}\n                               id={idx}\n                               value={list[idx].positionUnit}\n                               className='positionUnit'\n                               onChange={props.onChange}\n                               onBlur={handleUnit}/>\n                        <label htmlFor={positionPriceNetId}>Cena netto</label>\n                        <input type=\"number\"\n                               min={0}\n                               name={positionPriceNetId}\n                               id={idx}\n                               value={list[idx].positionPriceNet}\n                               className='positionPriceNet'\n                               onChange={props.onChange}\n                                onBlur={handlePriceNet}/>\n                        <label htmlFor={positionTaxId}>VAT %</label>\n                        <select name={positionTaxId}\n                                id={idx}\n                                value={list[idx].positionTax}\n                                className='positionTax'\n                                onChange={props.onChange}\n                                onBlur={handleTax}>\n                            <option value=\"0\">--</option>\n                            <option value=\"0.23\">23</option>\n                            <option value=\"0.08\">8</option>\n                            <option value=\"0.07\">7</option>\n                            <option value=\"0.05\">5</option>\n                            <option value=\"0\">0</option>\n                        </select>\n                        <label htmlFor={positionTotalNetId}>Wartość netto</label>\n                        <input type=\"text\"\n                               name={positionTotalNetId}\n                               id={idx}\n                               value={list[idx].positionTotalNet}\n                               className='positionTotalNet'\n                               onChange={props.onChange}/>\n                        <label htmlFor={positionTotalGrossId}>Wartość brutto</label>\n                        <input type=\"text\"\n                               name={positionTotalGrossId}\n                               id={idx}\n                               value={list[idx].positionTotalGross}\n                               className='positionTotalGross'\n                               onChange={props.onChange}/>\n                        <button className={'deletePosition'} onClick={deletePosition} type=\"button\">X</button>\n                    </div>\n                )\n            })\n            }\n            <div className={\"positionMessage\"}>{}</div>\n            <div className={'quantityMessage'}>{}</div>\n            <div className={'unitMessage'}>{}</div>\n            <div className={'priceNetMessage'}>{}</div>\n            <div className={'taxMessage'}>{}</div>\n            <button onClick={props.addPosition} className='addPositionBtn'>Dodaj pozycję</button>\n            <div className='sumOfInvoice'>\n                <span>Suma VAT: {totalTax} </span>\n                <span>Suma netto: {totalNet} </span>\n                <span>Suma brutto: {totalGross} </span>\n            </div>\n\n\n        </form>\n    )\n};\nexport default InvoicePosition;","import React from \"react\";\nimport InvoiceHeader from './InvoiceHeader';\nimport InvoiceSeller from './InvoiceSeller';\nimport InvoiceBuyer from './InvoiceBuyer';\nimport InvoicePosition from './InvoicePosition';\nimport {Link} from \"react-router-dom\";\n\n\nexport class InvoiceSaveBtn extends React.Component {\n    render() {\n        return <div>\n            <button onClick={this.props.saveInvoice} className='saveToBtn'>Zapisz</button>\n            <button className='invoiceBtn'><Link className='link' to=\"/list\">Lista faktur</Link></button>\n        </div>\n    }\n}\n\nclass Invoice extends React.Component {\n\n    minDate = new Date().toISOString().slice(0, 10);\n    setInvoiceNumber = () => {\n        let lsInvoices = localStorage.getItem('invoices'),\n            counter,\n            iNum,\n            iNumArr;\n        if(typeof (lsInvoices !== 'undefined') && typeof (lsInvoices !== null)) {\n            iNum = JSON.parse(lsInvoices)[JSON.parse(lsInvoices).length -1].invoiceNumber;\n            iNumArr = iNum.split('/');\n            counter = iNumArr[0];\n            return (Number(counter) + 1) + '/'  + new Date().toLocaleDateString().slice(3, 10).replace('.', '/');\n        }else {\n            return 1 + '/'  + new Date().toLocaleDateString().slice(3, 10).replace('.', '/');\n        }\n\n    };\n\n    state = {\n            invoiceNumber: this.setInvoiceNumber(),\n            issueDate: this.minDate,\n            place: 'Warszawa',\n            sellDate: this.minDate,\n            sellerName: '',\n            sellerTaxNo: '',\n            sellerStreet: '',\n            postcode: '',\n            sellerCity: '',\n            buyerName: '',\n            buyerTaxNo: '',\n            buyerStreet: '',\n            buyerPostcode: '',\n            buyerCity: '',\n            list: [{\n                positionAttributes: '',\n                positionQuantity: '',\n                positionUnit: '',\n                positionPriceNet: '',\n                positionTax: '',\n                positionTotalNet: '',\n                positionTotalGross: ''\n            }],\n            totalTax: 0,\n            totalNet: 0,\n            totalGross: 0,\n    };\n\n\n    handleInvoiceData = (event) => {\n        const { name, value } = event.target;\n            this.setState({\n                [name]: value\n            })\n    };\n\n    handleInvoicePosition = event => {\n        if (['positionAttributes',\n            'positionQuantity',\n            'positionUnit',\n            'positionPriceNet',\n            'positionTax',\n            'positionTotalNet',\n            'positionTotalGross'].includes(event.target.className)) {\n            let list = [...this.state.list];\n            list[event.target.id][event.target.className] = event.target.value;\n\n            list[event.target.id].positionTotalNet = list[event.target.id].positionQuantity * list[event.target.id].positionPriceNet;\n            list[event.target.id].positionTotalNet.toFixed(2);\n            list[event.target.id].positionTotalGross = list[event.target.id].positionTotalNet + (list[event.target.id].positionTotalNet * list[event.target.id].positionTax);\n            list[event.target.id].positionTotalGross.toFixed(2);\n\n            // set totalTax, totalNet, totalGross\n            let totalTax = 0,\n                totalNet = 0,\n                totalGross = 0;\n\n            list.forEach((e, i) => {\n                    totalTax += (Number(e.positionTax) * Number(e.positionPriceNet));\n                    totalNet += Number(e.positionTotalNet);\n                    totalGross += Number(e.positionTotalGross);\n            });\n\n            this.setState({\n                list: list,\n                totalTax: Number(totalTax.toFixed(2)),\n                totalNet: Number(totalNet.toFixed(2)),\n                totalGross: Number(totalGross.toFixed(2)),\n            });\n        }\n    };\n\n    handleAddInvoicePosition = (event) => {\n        event.preventDefault();\n        this.setState((prevState) => ({\n            list: [...prevState.list, {\n                positionAttributes: '',\n                positionQuantity: '',\n                positionUnit: '',\n                positionPriceNet: '',\n                positionTax: '',\n                positionTotalNet: '',\n                positionTotalGross: ''\n            }],\n        }));\n    };\n\n    handleSaveInvoice = (event) => {\n        event.preventDefault();\n        const {invoiceNumber, issueDate, place,sellDate,sellerName,sellerTaxNo,sellerStreet,postcode,sellerCity,buyerName,buyerTaxNo,buyerStreet,buyerPostcode,buyerCity,totalTax,totalNet,totalGross,list} = this.state;\n         if (invoiceNumber && issueDate && place && sellDate && sellerName && sellerTaxNo && sellerStreet && postcode && sellerCity && buyerName && buyerTaxNo && buyerStreet && buyerPostcode && buyerCity && totalTax && totalNet && totalGross) {\n             list.forEach((e,i) => {\n                 if (\n                     e.positionAttributes === \"\" &&\n                     e.positionQuantity === \"\" &&\n                     e.positionUnit === \"\" &&\n                     e.positionPriceNet === \"\" &&\n                     e.positionTax === \"\" &&\n                     e.positionTotalNet === \"\" &&\n                     e.positionTotalGross === \"\"\n                 ) {\n                     list.splice(i,1);\n                 }\n             });\n             this.saveToLocalStorage();\n         }else {\n             alert('wypełnij prawidłowo wszystkie pola');\n         }\n    };\n\n    saveToLocalStorage = (e) => {\n        let newInvoice = '';\n        newInvoice = this.state;\n        // get invoices from localStorage\n        let invoices = localStorage.getItem('invoices');\n        // if there are any invoices saved into localStorage\n        if(invoices) {\n            invoices = JSON.parse(invoices);\n            // add new invoice\n            invoices.push(newInvoice);\n            localStorage.setItem('invoices', JSON.stringify(invoices));\n        }\n        // if adding first invoice\n        else {\n            localStorage.setItem('invoices', JSON.stringify([newInvoice]));\n        }\n        console.log(newInvoice);\n        alert('Faktura zapisana poprawnie');\n\n        this.setState({\n            invoiceNumber: this.setInvoiceNumber(),\n            issueDate: this.minDate,\n            place: '',\n            sellDate: this.minDate,\n            sellerName: '',\n            sellerTaxNo: '',\n            sellerStreet: '',\n            postcode: '',\n            sellerCity: '',\n            buyerName: '',\n            buyerTaxNo: '',\n            buyerStreet: '',\n            buyerPostcode: '',\n            buyerCity: '',\n            list: [{\n                positionAttributes: '',\n                positionQuantity: '',\n                positionUnit: '',\n                positionPriceNet: '',\n                positionTax: '',\n                positionTotalNet: '',\n                positionTotalGross: ''\n            }],\n            totalTax: 0,\n            totalNet: 0,\n            totalGross: 0,\n        })\n    };\n\n    render(){\n        return <>\n            <div style={{width: '1240px', margin: 'auto'}}>\n                <InvoiceHeader value={this.state} onChange={this.handleInvoiceData}/>\n                <div className='sellerBuyerData'>\n                    <InvoiceSeller value={this.state} onChange={this.handleInvoiceData}/>\n                    <InvoiceBuyer value={this.state} onChange={this.handleInvoiceData}/>\n                </div>\n                <InvoicePosition value={this.state} onChange={this.handleInvoicePosition} addPosition={this.handleAddInvoicePosition}/>\n                <InvoiceSaveBtn saveInvoice={this.handleSaveInvoice}/>\n            </div>\n        </>\n    }\n}\n\nexport { Invoice }\n\n","import React from 'react';\nimport { Invoice } from \"./Invoice\";\nimport { InvoiceList } from \"./InvoiceList\";\nimport './css/main.scss';\nimport {HashRouter as Router, Link, Route, } from 'react-router-dom';\n\n\n\n  class Main extends React.Component {\n\n    render(){\n\n      return <div className='container'>\n        <button className='button'><Link className='link' to=\"/new\">Nowa faktura</Link></button>\n        <button className='button'><Link className='link' to=\"/list\">Lista faktur</Link></button>\n      </div>\n    }\n  }\n\n  class App extends React.Component {\n\n    render() {\n      return <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Route path={'/'} exact component={Main}/>\n          <Route path={'/new'} component={Invoice}/>\n          <Route path={'/list'} component={InvoiceList}/>\n        </div>\n      </Router>\n    }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}